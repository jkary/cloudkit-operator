//
// Copyright (c) 2025 Red Hat, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        (unknown)
// source: fulfillment/v1/virtual_machine_type.proto

//go:build protoopaque

package fulfillmentv1

import (
	v1 "github.com/innabox/cloudkit-operator/internal/api/shared/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents the overall state of a virtual machine.
type VirtualMachineState int32

const (
	// Unspecified indicates that the state is unknown.
	VirtualMachineState_VIRTUAL_MACHINE_STATE_UNSPECIFIED VirtualMachineState = 0
	// Indicates that the virtual machine isn't ready yet.
	VirtualMachineState_VIRTUAL_MACHINE_STATE_PROGRESSING VirtualMachineState = 1
	// Indicates that the virtual machine is ready.
	VirtualMachineState_VIRTUAL_MACHINE_STATE_READY VirtualMachineState = 2
	// Indicates that the virtual machine is unusable.
	VirtualMachineState_VIRTUAL_MACHINE_STATE_FAILED VirtualMachineState = 3
)

// Enum value maps for VirtualMachineState.
var (
	VirtualMachineState_name = map[int32]string{
		0: "VIRTUAL_MACHINE_STATE_UNSPECIFIED",
		1: "VIRTUAL_MACHINE_STATE_PROGRESSING",
		2: "VIRTUAL_MACHINE_STATE_READY",
		3: "VIRTUAL_MACHINE_STATE_FAILED",
	}
	VirtualMachineState_value = map[string]int32{
		"VIRTUAL_MACHINE_STATE_UNSPECIFIED": 0,
		"VIRTUAL_MACHINE_STATE_PROGRESSING": 1,
		"VIRTUAL_MACHINE_STATE_READY":       2,
		"VIRTUAL_MACHINE_STATE_FAILED":      3,
	}
)

func (x VirtualMachineState) Enum() *VirtualMachineState {
	p := new(VirtualMachineState)
	*p = x
	return p
}

func (x VirtualMachineState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineState) Descriptor() protoreflect.EnumDescriptor {
	return file_fulfillment_v1_virtual_machine_type_proto_enumTypes[0].Descriptor()
}

func (VirtualMachineState) Type() protoreflect.EnumType {
	return &file_fulfillment_v1_virtual_machine_type_proto_enumTypes[0]
}

func (x VirtualMachineState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Types of conditions used to describe the status of virtual machine.
type VirtualMachineConditionType int32

const (
	// Unspecified indicates that the condition is unknown.
	//
	// This will never be appear in the `spec.conditions` field of a virtual machine.
	VirtualMachineConditionType_VIRTUAL_MACHINE_CONDITION_TYPE_UNSPECIFIED VirtualMachineConditionType = 0
	// Indicates that the virtual machine isn't completely ready yet.
	//
	// Currently there are no `reason` values defined.
	VirtualMachineConditionType_VIRTUAL_MACHINE_CONDITION_TYPE_PROGRESSING VirtualMachineConditionType = 1
	// Indicates that the virtual machine is ready to use.
	//
	// Currently there are no `reason` values defined.
	VirtualMachineConditionType_VIRTUAL_MACHINE_CONDITION_TYPE_READY VirtualMachineConditionType = 2
	// Indicates that the virtual machine is unusable.
	//
	// Currently there are no `reason` values defined.
	VirtualMachineConditionType_VIRTUAL_MACHINE_CONDITION_TYPE_FAILED VirtualMachineConditionType = 3
	// Indicates that the virtual machine is degraded.
	VirtualMachineConditionType_VIRTUAL_MACHINE_CONDITION_TYPE_DEGRADED VirtualMachineConditionType = 4
)

// Enum value maps for VirtualMachineConditionType.
var (
	VirtualMachineConditionType_name = map[int32]string{
		0: "VIRTUAL_MACHINE_CONDITION_TYPE_UNSPECIFIED",
		1: "VIRTUAL_MACHINE_CONDITION_TYPE_PROGRESSING",
		2: "VIRTUAL_MACHINE_CONDITION_TYPE_READY",
		3: "VIRTUAL_MACHINE_CONDITION_TYPE_FAILED",
		4: "VIRTUAL_MACHINE_CONDITION_TYPE_DEGRADED",
	}
	VirtualMachineConditionType_value = map[string]int32{
		"VIRTUAL_MACHINE_CONDITION_TYPE_UNSPECIFIED": 0,
		"VIRTUAL_MACHINE_CONDITION_TYPE_PROGRESSING": 1,
		"VIRTUAL_MACHINE_CONDITION_TYPE_READY":       2,
		"VIRTUAL_MACHINE_CONDITION_TYPE_FAILED":      3,
		"VIRTUAL_MACHINE_CONDITION_TYPE_DEGRADED":    4,
	}
)

func (x VirtualMachineConditionType) Enum() *VirtualMachineConditionType {
	p := new(VirtualMachineConditionType)
	*p = x
	return p
}

func (x VirtualMachineConditionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VirtualMachineConditionType) Descriptor() protoreflect.EnumDescriptor {
	return file_fulfillment_v1_virtual_machine_type_proto_enumTypes[1].Descriptor()
}

func (VirtualMachineConditionType) Type() protoreflect.EnumType {
	return &file_fulfillment_v1_virtual_machine_type_proto_enumTypes[1]
}

func (x VirtualMachineConditionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Contains the details of the virtual machine.
//
// The `spec` contains the desired details, and may be modified by the user. The `status` contains the current status of
// the virtual machine, is provided by the system and can't be modified by the user.
type VirtualMachine struct {
	state               protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Id       string                 `protobuf:"bytes,1,opt,name=id,proto3"`
	xxx_hidden_Metadata *v1.Metadata           `protobuf:"bytes,2,opt,name=metadata,proto3"`
	xxx_hidden_Spec     *VirtualMachineSpec    `protobuf:"bytes,3,opt,name=spec,proto3"`
	xxx_hidden_Status   *VirtualMachineStatus  `protobuf:"bytes,4,opt,name=status,proto3"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *VirtualMachine) Reset() {
	*x = VirtualMachine{}
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachine) ProtoMessage() {}

func (x *VirtualMachine) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachine) GetId() string {
	if x != nil {
		return x.xxx_hidden_Id
	}
	return ""
}

func (x *VirtualMachine) GetMetadata() *v1.Metadata {
	if x != nil {
		return x.xxx_hidden_Metadata
	}
	return nil
}

func (x *VirtualMachine) GetSpec() *VirtualMachineSpec {
	if x != nil {
		return x.xxx_hidden_Spec
	}
	return nil
}

func (x *VirtualMachine) GetStatus() *VirtualMachineStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return nil
}

func (x *VirtualMachine) SetId(v string) {
	x.xxx_hidden_Id = v
}

func (x *VirtualMachine) SetMetadata(v *v1.Metadata) {
	x.xxx_hidden_Metadata = v
}

func (x *VirtualMachine) SetSpec(v *VirtualMachineSpec) {
	x.xxx_hidden_Spec = v
}

func (x *VirtualMachine) SetStatus(v *VirtualMachineStatus) {
	x.xxx_hidden_Status = v
}

func (x *VirtualMachine) HasMetadata() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Metadata != nil
}

func (x *VirtualMachine) HasSpec() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Spec != nil
}

func (x *VirtualMachine) HasStatus() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_Status != nil
}

func (x *VirtualMachine) ClearMetadata() {
	x.xxx_hidden_Metadata = nil
}

func (x *VirtualMachine) ClearSpec() {
	x.xxx_hidden_Spec = nil
}

func (x *VirtualMachine) ClearStatus() {
	x.xxx_hidden_Status = nil
}

type VirtualMachine_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Unique identifier of the virtual machine.
	Id       string
	Metadata *v1.Metadata
	Spec     *VirtualMachineSpec
	Status   *VirtualMachineStatus
}

func (b0 VirtualMachine_builder) Build() *VirtualMachine {
	m0 := &VirtualMachine{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Id = b.Id
	x.xxx_hidden_Metadata = b.Metadata
	x.xxx_hidden_Spec = b.Spec
	x.xxx_hidden_Status = b.Status
	return m0
}

// The spec contains the details of a virtual machine as desired by the user.
type VirtualMachineSpec struct {
	state                         protoimpl.MessageState `protogen:"opaque.v1"`
	xxx_hidden_Template           string                 `protobuf:"bytes,1,opt,name=template,proto3"`
	xxx_hidden_TemplateParameters map[string]*anypb.Any  `protobuf:"bytes,2,rep,name=template_parameters,json=templateParameters,proto3" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *VirtualMachineSpec) Reset() {
	*x = VirtualMachineSpec{}
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineSpec) ProtoMessage() {}

func (x *VirtualMachineSpec) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineSpec) GetTemplate() string {
	if x != nil {
		return x.xxx_hidden_Template
	}
	return ""
}

func (x *VirtualMachineSpec) GetTemplateParameters() map[string]*anypb.Any {
	if x != nil {
		return x.xxx_hidden_TemplateParameters
	}
	return nil
}

func (x *VirtualMachineSpec) SetTemplate(v string) {
	x.xxx_hidden_Template = v
}

func (x *VirtualMachineSpec) SetTemplateParameters(v map[string]*anypb.Any) {
	x.xxx_hidden_TemplateParameters = v
}

type VirtualMachineSpec_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Reference to the virtual machine template.
	//
	// This is mandatory, and must be the value of the `id` field of one of the virtual machine templates.
	//
	// This can't be modified after the virtual machine is created.
	Template string
	// Values of the template parameters.
	//
	// When using the HTTP+JSON version of the API the values must be represented as documented in the (ProtoJSON format
	// document)[https://protobuf.dev/programming-guides/json]. For example, if the template has a `cpu_count`
	// parameter of integer type, the complete virtual machine should be represented like this:
	//
	// ```json
	//
	//	{
	//	  "spec": {
	//	    "template": "123",
	//	    "template_parameters": {
	//	      "cpu_count": {
	//	        "@type": "type.googleapis.com/google.protobuf.Int32Value",
	//	        "value": 4
	//	      }
	//	    }
	//	  }
	//	}
	//
	// ```
	//
	// The possible values of the `@type` are the same as those used by the `type_url` field of the `Any` type:
	//
	// | Type                           | Value                                             |
	// |--------------------------------|---------------------------------------------------|
	// | Boolean                        | `type.googleapis.com/google.protobuf.BoolValue`   |
	// | Integer number, 32 bits        | `type.googleapis.com/google.protobuf.Int32Value`  |
	// | Integer number, 64 bits        | `type.googleapis.com/google.protobuf.Int64Value`  |
	// | Floating point number, 32 bits | `type.googleapis.com/google.protobuf.FloatValue`  |
	// | Floating point number, 64 bits | `type.googleapis.com/google.protobuf.DoubleValue` |
	// | String                         | `type.googleapis.com/google.protobuf.StringValue` |
	// | Timestamp                      | `type.googleapis.com/google.protobuf.Timestamp`   |
	// | Duration                       | `type.googleapis.com/google.protobuf.Duration`    |
	// | Array of bytes                 | `type.googleapis.com/google.protobuf.BytesValue`  |
	// | Any JSON value                 | `type.googleapis.com/google.protobuf.Value`       |
	//
	// These parameters can't be modified after the virtual machine is created.
	TemplateParameters map[string]*anypb.Any
}

func (b0 VirtualMachineSpec_builder) Build() *VirtualMachineSpec {
	m0 := &VirtualMachineSpec{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Template = b.Template
	x.xxx_hidden_TemplateParameters = b.TemplateParameters
	return m0
}

// The status contains the details of the virtual machine provided by the system.
type VirtualMachineStatus struct {
	state                 protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_State      VirtualMachineState         `protobuf:"varint,1,opt,name=state,proto3,enum=fulfillment.v1.VirtualMachineState"`
	xxx_hidden_Conditions *[]*VirtualMachineCondition `protobuf:"bytes,2,rep,name=conditions,proto3"`
	xxx_hidden_IpAddress  string                      `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *VirtualMachineStatus) Reset() {
	*x = VirtualMachineStatus{}
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineStatus) ProtoMessage() {}

func (x *VirtualMachineStatus) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineStatus) GetState() VirtualMachineState {
	if x != nil {
		return x.xxx_hidden_State
	}
	return VirtualMachineState_VIRTUAL_MACHINE_STATE_UNSPECIFIED
}

func (x *VirtualMachineStatus) GetConditions() []*VirtualMachineCondition {
	if x != nil {
		if x.xxx_hidden_Conditions != nil {
			return *x.xxx_hidden_Conditions
		}
	}
	return nil
}

func (x *VirtualMachineStatus) GetIpAddress() string {
	if x != nil {
		return x.xxx_hidden_IpAddress
	}
	return ""
}

func (x *VirtualMachineStatus) SetState(v VirtualMachineState) {
	x.xxx_hidden_State = v
}

func (x *VirtualMachineStatus) SetConditions(v []*VirtualMachineCondition) {
	x.xxx_hidden_Conditions = &v
}

func (x *VirtualMachineStatus) SetIpAddress(v string) {
	x.xxx_hidden_IpAddress = v
}

type VirtualMachineStatus_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Indicates the overall state of the virtual machine.
	State VirtualMachineState
	// Contains a list of conditions that describe in detail the status of the virtual machine.
	//
	// For example, a virtual machine that is ready could be represented like this (when converted to JSON):
	//
	//	{
	//	  "id": "123",
	//	  "spec": {
	//	  },
	//	  "status": {
	//	    "state": "VIRTUAL_MACHINE_STATE_READY",
	//	    "conditions": [
	//	      {
	//	        "type": "VIRTUAL_MACHINE_CONDITION_TYPE_READY",
	//	        "status": "CONDITION_STATUS_TRUE",
	//	        "last_transition_time": "2025-03-12 20:15:59+00:00",
	//	        "message": "The virtual machine is ready to use",
	//	      },
	//	      {
	//	        "type": "VIRTUAL_MACHINE_CONDITION_TYPE_FAILED",
	//	        "status": "CONDITION_STATUS_FALSE",
	//	        "last_transition_time": "2025-03-12 20:10:59+00:00"
	//	      }
	//	    ]
	//	  }
	//	}
	//
	// In this example the `READY` condition is true. That tells us that the virtual machine is ready to use via the IP address
	// provided in the `status.ip_address` field.
	//
	// The `FAILED` condition is false. That tells us that the virtual machine is *not* failed.
	//
	// Note that in this example, to make it shorter, only one condition appears. In general all the conditions (except
	// `UNSPECIFIED`) will appear exactly once.
	//
	// Check the documentation of the values of the `VirtualMachineConditionType` enumerated type to see possible conditions and
	// reasons.
	Conditions []*VirtualMachineCondition
	// IP address of the virtual machine.
	//
	// This will be empty if the virtual machine isn't ready.
	IpAddress string
}

func (b0 VirtualMachineStatus_builder) Build() *VirtualMachineStatus {
	m0 := &VirtualMachineStatus{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_State = b.State
	x.xxx_hidden_Conditions = &b.Conditions
	x.xxx_hidden_IpAddress = b.IpAddress
	return m0
}

// Contains the details of a condition that describes the status of a virtual machine.
type VirtualMachineCondition struct {
	state                         protoimpl.MessageState      `protogen:"opaque.v1"`
	xxx_hidden_Type               VirtualMachineConditionType `protobuf:"varint,1,opt,name=type,proto3,enum=fulfillment.v1.VirtualMachineConditionType"`
	xxx_hidden_Status             v1.ConditionStatus          `protobuf:"varint,2,opt,name=status,proto3,enum=shared.v1.ConditionStatus"`
	xxx_hidden_LastTransitionTime *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=last_transition_time,json=lastTransitionTime,proto3"`
	xxx_hidden_Reason             *string                     `protobuf:"bytes,4,opt,name=reason,proto3,oneof"`
	xxx_hidden_Message            *string                     `protobuf:"bytes,5,opt,name=message,proto3,oneof"`
	XXX_raceDetectHookData        protoimpl.RaceDetectHookData
	XXX_presence                  [1]uint32
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *VirtualMachineCondition) Reset() {
	*x = VirtualMachineCondition{}
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VirtualMachineCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VirtualMachineCondition) ProtoMessage() {}

func (x *VirtualMachineCondition) ProtoReflect() protoreflect.Message {
	mi := &file_fulfillment_v1_virtual_machine_type_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

func (x *VirtualMachineCondition) GetType() VirtualMachineConditionType {
	if x != nil {
		return x.xxx_hidden_Type
	}
	return VirtualMachineConditionType_VIRTUAL_MACHINE_CONDITION_TYPE_UNSPECIFIED
}

func (x *VirtualMachineCondition) GetStatus() v1.ConditionStatus {
	if x != nil {
		return x.xxx_hidden_Status
	}
	return v1.ConditionStatus(0)
}

func (x *VirtualMachineCondition) GetLastTransitionTime() *timestamppb.Timestamp {
	if x != nil {
		return x.xxx_hidden_LastTransitionTime
	}
	return nil
}

func (x *VirtualMachineCondition) GetReason() string {
	if x != nil {
		if x.xxx_hidden_Reason != nil {
			return *x.xxx_hidden_Reason
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineCondition) GetMessage() string {
	if x != nil {
		if x.xxx_hidden_Message != nil {
			return *x.xxx_hidden_Message
		}
		return ""
	}
	return ""
}

func (x *VirtualMachineCondition) SetType(v VirtualMachineConditionType) {
	x.xxx_hidden_Type = v
}

func (x *VirtualMachineCondition) SetStatus(v v1.ConditionStatus) {
	x.xxx_hidden_Status = v
}

func (x *VirtualMachineCondition) SetLastTransitionTime(v *timestamppb.Timestamp) {
	x.xxx_hidden_LastTransitionTime = v
}

func (x *VirtualMachineCondition) SetReason(v string) {
	x.xxx_hidden_Reason = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 3, 5)
}

func (x *VirtualMachineCondition) SetMessage(v string) {
	x.xxx_hidden_Message = &v
	protoimpl.X.SetPresent(&(x.XXX_presence[0]), 4, 5)
}

func (x *VirtualMachineCondition) HasLastTransitionTime() bool {
	if x == nil {
		return false
	}
	return x.xxx_hidden_LastTransitionTime != nil
}

func (x *VirtualMachineCondition) HasReason() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 3)
}

func (x *VirtualMachineCondition) HasMessage() bool {
	if x == nil {
		return false
	}
	return protoimpl.X.Present(&(x.XXX_presence[0]), 4)
}

func (x *VirtualMachineCondition) ClearLastTransitionTime() {
	x.xxx_hidden_LastTransitionTime = nil
}

func (x *VirtualMachineCondition) ClearReason() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 3)
	x.xxx_hidden_Reason = nil
}

func (x *VirtualMachineCondition) ClearMessage() {
	protoimpl.X.ClearPresent(&(x.XXX_presence[0]), 4)
	x.xxx_hidden_Message = nil
}

type VirtualMachineCondition_builder struct {
	_ [0]func() // Prevents comparability and use of unkeyed literals for the builder.

	// Indicates the type of condition.
	Type VirtualMachineConditionType
	// Indicates the status of the condition.
	Status v1.ConditionStatus
	// This time is the last time that the condition was updated.
	LastTransitionTime *timestamppb.Timestamp
	// Contains a the reason of the condition in a format suitable for use by programs.
	//
	// The possible values will be documented in the object that contains the condition.
	Reason *string
	// Contains a text giving more details of the condition.
	//
	// This will usually be progress reports, or error messages, and are intended for use by humans, to debug problems.
	Message *string
}

func (b0 VirtualMachineCondition_builder) Build() *VirtualMachineCondition {
	m0 := &VirtualMachineCondition{}
	b, x := &b0, m0
	_, _ = b, x
	x.xxx_hidden_Type = b.Type
	x.xxx_hidden_Status = b.Status
	x.xxx_hidden_LastTransitionTime = b.LastTransitionTime
	if b.Reason != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 3, 5)
		x.xxx_hidden_Reason = b.Reason
	}
	if b.Message != nil {
		protoimpl.X.SetPresentNonAtomic(&(x.XXX_presence[0]), 4, 5)
		x.xxx_hidden_Message = b.Message
	}
	return m0
}

var File_fulfillment_v1_virtual_machine_type_proto protoreflect.FileDescriptor

var file_fulfillment_v1_virtual_machine_type_proto_rawDesc = string([]byte{
	0x0a, 0x29, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x01,
	0x0a, 0x0e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x36, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x75, 0x6c, 0x66,
	0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x12, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x6b, 0x0a, 0x13, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x5b, 0x0a, 0x17, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0xaf, 0x02, 0x0a, 0x17, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x66, 0x75, 0x6c,
	0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x4c, 0x0a, 0x14, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x6c, 0x61, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2a, 0xa6, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x56, 0x49,
	0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x25, 0x0a, 0x21, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43,
	0x48, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52,
	0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x56, 0x49, 0x52, 0x54,
	0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x56, 0x49, 0x52,
	0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xff, 0x01, 0x0a, 0x1b,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x2a, 0x56,
	0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2e, 0x0a, 0x2a, 0x56,
	0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x28, 0x0a, 0x24, 0x56,
	0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x59, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c,
	0x5f, 0x4d, 0x41, 0x43, 0x48, 0x49, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x2b, 0x0a, 0x27, 0x56, 0x49, 0x52, 0x54, 0x55, 0x41, 0x4c, 0x5f, 0x4d, 0x41, 0x43, 0x48,
	0x49, 0x4e, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x45, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10, 0x04, 0x42, 0xd6, 0x01,
	0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x42, 0x17, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x6e, 0x61,
	0x62, 0x6f, 0x78, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x6b, 0x69, 0x74, 0x2d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x3b, 0x66, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x76, 0x31, 0xa2,
	0x02, 0x03, 0x46, 0x58, 0x58, 0xaa, 0x02, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0e, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c,
	0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1a, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c,
	0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65,
	0x6e, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var file_fulfillment_v1_virtual_machine_type_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_fulfillment_v1_virtual_machine_type_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_fulfillment_v1_virtual_machine_type_proto_goTypes = []any{
	(VirtualMachineState)(0),         // 0: fulfillment.v1.VirtualMachineState
	(VirtualMachineConditionType)(0), // 1: fulfillment.v1.VirtualMachineConditionType
	(*VirtualMachine)(nil),           // 2: fulfillment.v1.VirtualMachine
	(*VirtualMachineSpec)(nil),       // 3: fulfillment.v1.VirtualMachineSpec
	(*VirtualMachineStatus)(nil),     // 4: fulfillment.v1.VirtualMachineStatus
	(*VirtualMachineCondition)(nil),  // 5: fulfillment.v1.VirtualMachineCondition
	nil,                              // 6: fulfillment.v1.VirtualMachineSpec.TemplateParametersEntry
	(*v1.Metadata)(nil),              // 7: shared.v1.Metadata
	(v1.ConditionStatus)(0),          // 8: shared.v1.ConditionStatus
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
	(*anypb.Any)(nil),                // 10: google.protobuf.Any
}
var file_fulfillment_v1_virtual_machine_type_proto_depIdxs = []int32{
	7,  // 0: fulfillment.v1.VirtualMachine.metadata:type_name -> shared.v1.Metadata
	3,  // 1: fulfillment.v1.VirtualMachine.spec:type_name -> fulfillment.v1.VirtualMachineSpec
	4,  // 2: fulfillment.v1.VirtualMachine.status:type_name -> fulfillment.v1.VirtualMachineStatus
	6,  // 3: fulfillment.v1.VirtualMachineSpec.template_parameters:type_name -> fulfillment.v1.VirtualMachineSpec.TemplateParametersEntry
	0,  // 4: fulfillment.v1.VirtualMachineStatus.state:type_name -> fulfillment.v1.VirtualMachineState
	5,  // 5: fulfillment.v1.VirtualMachineStatus.conditions:type_name -> fulfillment.v1.VirtualMachineCondition
	1,  // 6: fulfillment.v1.VirtualMachineCondition.type:type_name -> fulfillment.v1.VirtualMachineConditionType
	8,  // 7: fulfillment.v1.VirtualMachineCondition.status:type_name -> shared.v1.ConditionStatus
	9,  // 8: fulfillment.v1.VirtualMachineCondition.last_transition_time:type_name -> google.protobuf.Timestamp
	10, // 9: fulfillment.v1.VirtualMachineSpec.TemplateParametersEntry.value:type_name -> google.protobuf.Any
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_fulfillment_v1_virtual_machine_type_proto_init() }
func file_fulfillment_v1_virtual_machine_type_proto_init() {
	if File_fulfillment_v1_virtual_machine_type_proto != nil {
		return
	}
	file_fulfillment_v1_virtual_machine_type_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fulfillment_v1_virtual_machine_type_proto_rawDesc), len(file_fulfillment_v1_virtual_machine_type_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fulfillment_v1_virtual_machine_type_proto_goTypes,
		DependencyIndexes: file_fulfillment_v1_virtual_machine_type_proto_depIdxs,
		EnumInfos:         file_fulfillment_v1_virtual_machine_type_proto_enumTypes,
		MessageInfos:      file_fulfillment_v1_virtual_machine_type_proto_msgTypes,
	}.Build()
	File_fulfillment_v1_virtual_machine_type_proto = out.File
	file_fulfillment_v1_virtual_machine_type_proto_goTypes = nil
	file_fulfillment_v1_virtual_machine_type_proto_depIdxs = nil
}
